name: Rust

on:
  push:
    branches: ["main"]
    paths:
      - "bench/**"
      - "examples/**"
      - "src/**"
      - "Cargo.toml"
  pull_request:
    branches: ["main"]
    paths:
      - "bench/**"
      - "examples/**"
      - "src/**"
      - "Cargo.toml"

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install nightly Rust (2024 Edition)
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: x86_64-unknown-linux-gnu
          override: true

      - name: Verify Rust version
        run: rustc --version

      - name: Build
        run: cargo build

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Install nightly Rust (2024 Edition)
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: x86_64-unknown-linux-gnu
          override: true

      - name: Test
        run: cargo test

  publish:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Install nightly Rust (2024 Edition)
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: x86_64-unknown-linux-gnu
          override: true

      - name: Bump version, create tag and release
        id: version
        uses: cycjimmy/semantic-release-action@v3
        with:
          dry_run: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Cargo.toml version
        run: |
          version=$(echo ${{ steps.version.outputs.new_release_version }} | sed 's/^v//')
          sed -i.bak "s/^version = \".*\"/version = \"$version\"/" Cargo.toml

      - name: Publish to crates.io
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo publish
